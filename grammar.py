""" This Module Contains the Syntax of C-Grass Plus """

cfg = {
    "<program>": "seed <global> garden() (<statement>); <function> plant",
    "<global>": ["floral <constant> <all-types> #identifier <insert-variable>; <global>", "EPSILON"],
    "<constant>": ["hard", "EPSILON"],
    "<statement>": [
        "<constant> <all-types> #identifier <insert-variable>; <statement>",
        "<i/o-statement>; <statement>",
        "#identifier <insert-func> <more-id> <insert-assignment>; <statement>",
        "leaf(<all-type-value> <more-all> <insert-condition>) (<statement>); <more-condition> <else> <statement>",
        "<iterative>; <statement>",
        "tree(branch <all-type-value> <insert-branch>; <more-branch>); <statement>",
        "clear; <statement>",
        "break;",
        "EPSILON"
    ],
    "<all-types>": ["<common-type>", "<sqnc-type>"],
    "<common-type>": ["tint", "flora", "chard", "string", "bloom"],
    "<sqnc-type>": ["florist", "tulip", "dirt", "stem"],
    "<insert-variable>": [
        "<all-assignment> <flora-tint-value> <more-flora-tint>",
        "<string-assignment> <all-type-value>",
        "EPSILON"
    ],
    "<all-assignment>": ["<string-assignment>", "-=", "*=", "/=", "%=", "**=", "//="],
    "<string-assignment>": ["=", "+="],
    "<flora-tint-value>": ["<insert-flora-tint> <operate-flora-tint>", "EPSILON"],
    "<insert-flora-tint>": [
        "tint literal",
        "flora literal",
        "#identifier <insert-func> <indexing>",
        "lent(<all-type-value>)"
    ],
    "<operate-flora-tint>": ["<operator> <insert-operation>", "EPSILON"],
    "<insert-operation>": [
        "<insert-flora-tint> <operate-flora-tint>",
        "(<insert-flora-tint> <operate-flora-tint>) <operate-flora-tint>"
    ],
    "<operator>": ["+", "-", "*", "/", "%", "**", "//"],
    "<more-flora-tint>": [", <flora-tint-value> <more-flora-tint>", "EPSILON"],
    "<string-value>": [
        "chard literal",
        "string literal",
        "bloom literal",
        "#identifier <insert-func> <start-end-step> <indexing>"
    ],
    "<concatenate>": ["+ <string-value> <concatenate>", "EPSILON"],
    "<add-florist>": ["<indexing> + <all-type-value> <add-florist>", "EPSILON"],
    "<indexing>": ["[<insert-index>] <indexing>", "EPSILON"],
    "<insert-index>": ["tint literal", "string literal"],
    "<supply-dirt>": [
        "getItems(#identifier <insert-func>)",
        "getKeys(#identifier <insert-func>)",
        "getValues(#identifier <insert-func> <indexing>)"
    ],
    "<common-data>": [
        "<insert-flora-tint>",
        "<string-value> <concatenate>",
        "<all-types> (<all-type-value>)"
    ],
    "<all-type-value>": [
        "<common-data> <add-florist>",
        "<open-bracket> <dirt> <sequence> <close-bracket>",
        "<supply-dirt>",
        "inpetal(string literal)"
    ],
    "<start-end-step>": ["[<insert-start>", "EPSILON"],
    "<insert-start>": ["<insert-index> : <close-start>", ": <skip-start>"],
    "<close-start>": ["<close-end>", "<insert-index> <close-end>"],
    "<close-end>": ["] <2D-start-end-step>", ": tint literal] <2D-start-end-step>"],
    "<skip-start>": ["insert-index> <close-end> <2D-start-end-step>", ": tint literal] <2D-start-end-step>"],
    "<2D-start-end-step>": ["[<2D-insert-start>", "EPSILON"],
    "<2D-insert-start>": ["<insert-index> : <2D-close-start>", ": <2D-skip-start>"],
    "<2D-close-start>": ["<2D-close-end>", "<insert-index> <2D-close-end>"],
    "<2D-close-end>": ["] <3D-start-end-step>", ": tint literal] <3D-start-end-step>"],
    "<2D-skip-start>": ["insert-index> <2D-close-end> <3D-start-end-step>", ": tint literal] <3D-start-end-step>"],
    "<3D-start-end-step>": ["[<3D-insert-start>", "EPSILON"],
    "<3D-insert-start>": ["<insert-index> : <3D-close-start>", ": <3D-skip-start>"],
    "<3D-close-start>": ["<3D-close-end>", "<insert-index> <3D-close-end>"],
    "<3D-close-end>": ["] ", ": tint literal]"],
    "<3D-skip-start>": ["insert-index> <3D-close-end>", ": tint literal]"],
    "<sequence>": [
        "<common-data> <next-sqnc>",
        "<open-bracket> <dirt> <2D-sqnc> <close-bracket> <next-sqnc>"
    ],
    "<next-sqnc>": [", <sequence>", "EPSILON"],
    "<2D-sqnc>": [
        "<common-data> <next-2D-sqnc>",
        "<open-bracket> <dirt> <common-data> <next-3D-sqnc> <close-bracket> <next-2D-sqnc>"
    ],
    "<next-2D-sqnc>": [", <2D-sqnc>", "EPSILON"],
    "<next-3D-sqnc>": [", <common-data> <next-3D-sqnc>", "EPSILON"],
    "<open-bracket>": ["[", "{"],
    "<dirt>": ["string literal :", "EPSILON"],
    "<close-bracket>": ["]", "}"],
    "<insert-func>": ["(<argument>) <instance-grab>", "EPSILON"],
    "<instance-grab>": ["#identifier().identifier", "EPSILON"],
    "<i/o-statement>": ["mint(<all-type-value>)", "<insert-inpetal> inpetal(string literal)"],
    "<insert-inpetal>": ["<all-types>", "#identifier <insert-func>"],
    "<more-id>": ["<indexing> , #identifier <insert-func> <indexing> <more-id>", "EPSILON"],
    "<more-all>": [", <all-type-value> <more-all>", "EPSILON"],
    "<insert-assignment>": ["<all-assignment> <all-type-value> <more-all>", "EPSILON"],
    "<insert-condition>": [
        "<all-cond-operator> <insert-all-operand>",
        "<string-cond-op> <string-operand>",
        "EPSILON"
    ],
    "<insert-all-operand>": ["<flora-tint-value> <more-flora-tint>", "<common-type> <more-type>"],
    "<more-type>": [", <common-type <more-type>", "EPSILON"],
    "<string-operand>": ["<all-type-value> <more-all>", "<all-types> <more-all-types>"],
    "<more-all-types>": [", <all-types> <more-all-types>", "EPSILON"],
    "<all-cond-operator>": ["<string-cond-op>", ">", "<", ">=", "<="],
    "<string-cond-op>": ["==", "!=", "=&", "=/", "at", "nut"],
    "<more-condition>": [
        "eleaf(<all-type-value> <more-all> <insert-condition>) (<statement>) <more-condition>",
        "EPSILON"
    ],
    "<else>": ["moss (<statement>)", "EPSILON"],
    "<iterative>": ["fern(<insert-fern>", "willow(<all-type-value> <more-all> <insert-condition>) (<statement>)"],
    "<insert-fern>": [
        "#identifier = <insert-flora-tint>; <all-type-value> <more-all> <insert-condition>; #identifier <all-assignment> <insert-flora-tint>;) (<statement>)",
        "<common-data> <more-common> at <all-type-value>) (<statement>)"
    ],
    "<more-common>": [", <common-data> <more-common>", "EPSILON"],
    "<insert-branch>": [
        ": <statement>",
        "leaf <all-type-value> <more-all> <insert-condition> (<statement>)"
    ],
    "<more-branch>": ["branch <all-type-value> <insert-branch> <more-branch>", "EPSILON"],
    "<argument>": ["<insert-argument>", "<common-type> #identifier <insert-variable> <more-data>"],
    "<more-data>": [", <common-type> #identifier <insert-variable> <more-data>", "EPSILON"],
    "insert-argument>": ["<all-type-value> <next-argument>", "#identifier(<2D-argument>) <next-argument>"],
    "<next-argument>": [", <insert-argument>", "EPSILON"],
    "<2D-argument>": [
        "<all-type-value> <next-2D-argument>",
        "#identifier(<all-type-value> <add-3D-argument>) <add-2D-argument>"
    ],
    "<add-2D-argument>": [", <2D-argument>", "EPSILON"],
    "<add-3D-argument>": [", <all-type-value> <add-3D-argument>", "EPSILON"],
    "<function>": [
        "<common-type> #identifier(<insert-parameter>) (<statement> regrow <insert-regrow>;); <function>",
        "viola #identifier(<keyword-param>) (<statement>); <function>",
        "EPSILON"
    ],
    "<insert-regrow>": ["<all-type-value>", "<common-data> at <all-type-value>"],
    "<insert-parameter>": [
        "<keyword-param> <more-key-param>",
        "<all-types> #identifier <insert-variable> <next-parameter>",
        "#identifier(<2D-parameter>) <next-parameter>"
    ],
    "<keyword-param>": ["<common-type> *#identifier", "**#identifier", "EPSILON"],
    "<more-key-param>": [", <keyword-param> <more-key-param>", "EPSILON"],
    "<next-parameter>": [", <insert-parameter>", "EPSILON"],
    "<2D-parameter>": [
        "<keyword-param> <more-key-param>",
        "<all-types> #identifier <insert-variable> <next-2D-param>",
        "#identifier(<all-types> #identifier <insert-variable> <next-3D-param>) <next-2D-param>"
    ],
    "<next-2D-param>": [", <2D-parameter>", "EPSILON"],
    "<next-3D-param>": [", <all-types> #identifier <insert-variable> <next-3D-param>", "EPSILON"]
}

first_set = {
    "<program>": "seed",
    "<global>": ["floral", "EPSILON"],
    "<constant>": ["hard", "EPSILON"],
    "<statement>": ["hard", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint", "leaf", "fern", "willow", "tree", "clear", "break", "EPSILON"],
    "<all-types>": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "<common-type>": ["tint", "flora", "chard", "string", "bloom"],
    "<sqnc-type>": ["florist", "tulip", "dirt", "stem"],
    "<insert-variable>": ["=", "+", "-", "*", "/", "%", "EPSILON"],
    "<all-assignment>": ["=", "+", "-", "*", "/", "%"],
    "<string-assignment>": ["=", "+"],
    "<flora-tint-value>": ["tint literal", "flora literal", "#", "lent", "EPSILON"],
    "<insert-flora-tint>": ["tint literal", "flora literal", "#", "lent"],
    "<operate-flora-tint>": ["+", "-", "*", "/", "%", "EPSILON"],
    "<insert-operation>": ["tint literal", "flora literal", "("],
    "<operator>": ["+", "-", "*", "/", "%"],
    "<more-flora-tint>": [",", "EPSILON"],
    "<string-value>": ["chard literal", "string literal", "bloom literal" "#"],
    "<concatenate>": ["+", "EPSILON"],
    "<add-florist>": ["[", "+", "EPSILON"],
    "<indexing>": ["[", "EPSILON"],
    "<insert-index>": ["tint literal", "string literal"],
    "<supply-dirt>": ["getItems", "getKeys", "getValues"],
    "<common-data>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "<all-type-value>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<start-end-step>": ["[", "EPSILON"],
    "<insert-start>": ["tint literal", "string literal", ":"],
    "<close-start>": ["]", ":", "tint literal", "string literal"],
    "<close-end>": ["]", ":"],
    "<skip-start>": ["tint literal", "string literal", ":"],
    "<2D-start-end-step>": ["[", "EPSILON"],
    "<2D-insert-start>": ["tint literal", "string literal", ":"],
    "<2D-close-start>": ["]", ":", "tint literal", "string literal"],
    "<2D-close-end>": ["]", ":"],
    "<2D-skip-start>": ["tint literal", "string literal", ":"],
    "<3D-start-end-step>": ["[", "EPSILON"],
    "<3D-insert-start>": ["tint literal", "string literal", ":"],
    "<3D-close-start>": ["]", ":", "tint literal", "string literal"],
    "<3D-close-end>": ["]", ":"],
    "<3D-skip-start>": ["tint literal", "string literal", ":"],
    "<more-common>": [",", "EPSILON"],
    "<sequence>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{"],
    "<next-sqnc>": [",", "EPSILON"],
    "<2D-sqnc>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{"],
    "<next-2D-sqnc>": [",", "EPSILON"],
    "<next-3D-sqnc>": [",", "EPSILON"],
    "<open-bracket>": ["[", "{"],
    "<dirt>": ["string literal", "EPSILON"],
    "<close-bracket>": ["]", "}"],
    "<insert-func>": ["(", "EPSILON"],
    "<instance-grab>": ["#", "EPSILON"],
    "<i/o-statement>": ["mint", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal"],
    "<insert-inpetal>": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#"],
    "<more-id>": ["[", ",", "EPSILON"],
    "<more-all>": [",", "EPSILON"],
    "<insert-assignment>": ["=", "+", "-", "*", "/", "%", "EPSILON"],
    "<insert-condition>": ["=", "!", "at", "nut", ">", "<", "EPSILON"],
    "<insert-all-operand>": ["tint literal", "flora literal", "#", "lent", "tint", "flora", "chard", "string", "bloom"],
    "<more-type>": [",", "EPSILON"],
    "<string-operand>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<more-all-types>": [",", "EPSILON"],
    "<all-cond-operator>": ["=", "!", "at", "nut", ">", "<"],
    "<string-cond-op>": ["=", "!", "at", "nut"],
    "<more-condition>": ["eleaf", "EPSILON"],
    "<else>": ["moss", "EPSILON"],
    "<iterative>": ["fern", "willow"],
    "<insert-fern>": ["#", "tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "<more-common>": [",", "EPSILON"],
    "<insert-branch>": [":", "leaf"],
    "<more-branch>": ["branch", "EPSILON"],
    "<argument>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<more-data>": [",", "EPSILON"],
    "<insert-argument>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<next-argument>": [",", "EPSILON"],
    "<2D-argument>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<add-2D-argument>": [",", "EPSILON"],
    "<add-3D-argument>": [",", "EPSILON"],
    "<function>": ["tint", "flora", "chard", "string", "bloom", "viola", "EPSILON"],
    "<insert-regrow>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<insert-parameter>": ["tint", "flora", "chard", "string", "bloom", "*", ",", "EPSILON", "florist", "tulip", "dirt", "stem", "[", "{"],
    "<keyword-param>": ["tint", "flora", "chard", "string", "bloom", "*", "EPSILON"],
    "<more-key-param>": [",", "EPSILON"],
    "<next-parameter>": [",", "EPSILON"],
    "<2D-parameter>": ["tint", "flora", "chard", "string", "bloom", "*", ",", "EPSILON", "florist", "tulip", "dirt", "stem", "[", "{"],
    "<next-2D-param>": [",", "EPSILON"],
    "<next-3D-param>": [",", "EPSILON"]
}

follow_set = {
    "<program>": "$",
    "<global>": "garden",
    "<constant>": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "<statement>": [")", "regrow"],
    "<all-types>": ["#", "(", "inpetal", ",", "$", ")", ";", "("],
    "<common-type>": ["#", "(", "inpetal", ",", "$", ")", ";", "(", "*"],
    "<sqnc-type>": ["#", "(", "inpetal", ",", "$", ")", ";", "("],
    "<insert-variable>": [";", ",", "$", ")"],
    "<all-assignment>": ["tint literal", "flora literal", "#", "lent", ",", "$", ";", ")", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<string-assignment>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal", ";"],
    "<flora-tint-value>": [",", "$", ";", ")", "("],
    "<insert-flora-tint>": ["+", "-", "*", "/", "%", "$", ",", ";", "(", ")", "[", "=", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}"],
    "<operate-flora-tint>": [",", "$", ";", ")", "("],
    "<insert-operation>": [",", "$", ";", ")", "("],
    "<operator>": ["tint literal", "flora literal", "("],
    "<more-flora-tint>": [";", ",", "$", ")", "("],
    "<string-value>": ["+", "$", "[", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<concatenate>": ["[", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "(", "]", "}"],
    "<add-florist>": [",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "[", "("],
    "<indexing>": ["+", "-", "*", "/", "%", "$", ",", ";", "(", ")", "[", "=", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}"],
    "<insert-index>": ["]", ":"],
    "<supply-dirt>": [",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "[", "("],
    "<common-data>": ["[", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "(", "]", "}"],
    "<all-type-value>": [",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "[", "("],
    "<start-end-step>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<insert-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<close-start>": 	["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<close-end>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<skip-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<2D-start-end-step>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<2D-insert-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<2D-close-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<2D-close-end>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<2D-skip-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<3D-start-end-step>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<3D-insert-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<3D-close-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<3D-close-end>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<3D-skip-start>": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "<sequence>": ["]", "}"],
    "<next-sqnc>": ["]", "}"],
    "<2D-sqnc>": ["]", "}"],
    "<next-2D-sqnc>": ["]", "}"],
    "<next-3D-sqnc>": ["]", "}"],
    "<open-bracket>": ["string literal", "tint literal", "flora literal", "#", "lent", "chard literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "]", "}"],
    "<dirt>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "]", "}"],
    "<close-bracket>": [",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "[", "(", "]", "}"],
    "<insert-func>": ["[", ",", "=", "+", "-", "*", "/", "%", ";", "$", "(", ")", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}", "inpetal"],
    "<instance-grab>": ["[", ",", "=", "+", "-", "*", "/", "%", ";", "$", "(", ")", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}", "inpetal"],
    "<i/o-statement>": ";",
    "<insert-inpetal>": "inpetal",
    "<more-id>": ["=", "+", "-", "*", "/", "%", ";"],
    "<more-all>": ["=", "!", "at", "nut", ">", "<", ")", ";", "(", "$", ","],
    "<insert-assignment>": ";",
    "<insert-condition>": [")", ";", "("],
    "<insert-all-operand>": [")", ";", "("],
    "<more-type>": [")", ";", "("],
    "<string-operand>": [")", ";", "("],
    "<more-all-types>": [")", ";", "("],
    "<all-cond-operator>": ["tint literal", "flora literal", "#", "lent", "tint", "flora", "chard", "string", "bloom"],
    "<string-cond-op>": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "<more-condition>": ["moss", "hard", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint", "leaf", "fern", "willow", "tree", "clear", "break", ")", "regrow"],
    "<else>": ["hard", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint", "leaf", "fern", "willow", "tree", "clear", "break", ")", "regrow"],
    "<iterative>": ";",
    "<insert-fern>": ";",
    "<more-common>": "at",
    "<insert-branch>": [";", ",", ")"],
    "<more-branch>": ")",
    "<argument>": ")",
    "<more-data>": ")",
    "<insert-argument>": ")",
    "<next-argument>": ")",
    "<2D-argument>": ")",
    "<add-2D-argument>": ")",
    "<add-3D-argument>": ")",
    "<function>": "plant",
    "<insert-regrow>": ";",
    "<insert-parameter>": ")",
    "<keyword-param>": [")", ","],
    "<more-key-param>": ")",
    "<next-parameter>": ")",
    "<2D-parameter>": ")",
    "<next-2D-param>": ")",
    "<next-3D-param>": ")"
}

predict_set = {
    "FIRST(<program>)": "seed",
    "FIRST(<global>)": "floral",
    "FOLLOW(<global>)": "garden",
    "FIRST(<constant>)": "hard",
    "FOLLOW(<constant>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<statement>-<variable>)": ["hard", "$"],
    "FIRST(<statement>-<i/o>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint"],
    "FIRST(<statement>-<identifier>)": "#",
    "FIRST(<statement>-<leaf>)": "leaf",
    "FIRST(<statement>-<iterative>)": ["fern", "willow"],
    "FIRST(<statement>-<tree>)": "tree",
    "FIRST(<statement>-<clear>)": "clear",
    "FIRST(<statement>-<break>)": "break",
    "FOLLOW(<statement>)": [")", "regrow"],
    "FIRST(<all-types>-<common-type>)": ["tint", "flora", "chard", "string", "bloom"],
    "FIRST(<all-types>-<sqnc-type>)": ["florist", "tulip", "dirt", "stem"],
    "FIRST(<common-type>-<tint>)": "tint",
    "FIRST(<common-type>-<flora>)": "flora",
    "FIRST(<common-type>-<chard>)": "chard",
    "FIRST(<common-type>-<string>)": "string",
    "FIRST(<common-type>-<bloom>)": "bloom",
    "FIRST(<sqnc-type>-<florist>)": "florist",
    "FIRST(<sqnc-type>-<tulip>)": "tulip",
    "FIRST(<sqnc-type>-<dirt>)": "dirt",
    "FIRST(<sqnc-type>-<stem>)": "stem",
    "FIRST(<insert-variable>-<all-assignment>)": ["=", "+", "-", "*", "/", "%"],
    "FIRST(<insert-variable>-<string-assignment>)": ["=", "+"],
    "FOLLOW(<insert-variable>)": [";", ",", "$", ")"],
    "FIRST(<all-assignment>-<string-assignment>)": ["=", "+"],
    "FIRST(<all-assignment>-<-=>)": "-",
    "FIRST(<all-assignment>-<*=>)": "*",
    "FIRST(<all-assignment>-</=>)": "/",
    "FIRST(<all-assignment>-<%=>)": "%",
    "FIRST(<all-assignment>-<**=>)": "*",
    "FIRST(<all-assignment>-<//=>)": "/",
    "FIRST(<string-assignment>-<=>)": "=",
    "FIRST(<string-assignment>-<+=>)": "+",
    "FIRST(<flora-tint-value>-<insert-flora-tint>)": ["tint literal", "flora literal", "lent"],
    "FOLLOW(<flora-tint-value>)": [",", "$", ";", ")", "("],
    "FIRST(<insert-flora-tint>-<tint-literal>)": "tint literal",
    "FIRST(<insert-flora-tint>-<flora-literal)": "flora literal",
    "FIRST(<insert-flora-tint>-<identifier>)": "#",
    "FIRST(<insert-flora-tint>-<lent>)": "lent",
    "FIRST(<operate-flora-tint>)": ["+", "-", "*", "/", "%"],
    "FOLLOW(<operate-flora-tint>)": [",", "$", ";", ")", "("],
    "FIRST(<insert-operation>-<insert-flora-tint>)": ["tint literal", "flora literal", "lent"],
    "FIRST(<insert-operation>-<(>)": "(",
    "FIRST(<operator>-<+>)": "+",
    "FIRST(<operator>-<->)": "-",
    "FIRST(<operator>-<*>)": "*",
    "FIRST(<operator>-</>)": "/",
    "FIRST(<operator>-<%>)": "%",
    "FIRST(<operator>-<**>)": "*",
    "FIRST(<operator>-<//>)": "/",
    "FIRST(<more-flora-tint>)": ",",
    "FOLLOW(<more-flora-tint>)": [";", ",", "$", ")", "("],
    "FIRST(<string-value>-<chard-literal>)": "chard literal",
    "FIRST(<string-value>-<string-literal>)": "string literal",
    "FIRST(<string-value>-<bloom-literal>)": "bloom literal",
    "FIRST(<string-value>-<identifier>)": "#",
    "FIRST(<concatenate>)": "+",
    "FOLLOW(<concatenate>)": ["[", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "(", "]", "}"],
    "FIRST(<add-florist>)": ["[", "$"],
    "FOLLOW(<add-florist>)": [",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "$", "[", "("],
    "FIRST(<indexing>)": "[",
    "FOLLOW(<indexing>)": ["+", "-", "*", "/", "%", "$", ",", ";", "(", ")", "[", "=", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}"],
    "FIRST(<insert-index>-<tint-literal>)": "tint literal",
    "FIRST(<insert-index>-<string-literal>)": "string literal",
    "FIRST(<supply-dirt>-<getItems>)": "getItems",
    "FIRST(<supply-dirt>-<getKeys>)": "getKeys",
    "FIRST(<supply-dirt>-<getValues>)": "getValues",
    "FIRST(<common-data>-<insert-flora-tint>)": ["tint literal", "flora literal", "#", "lent"],
    "FIRST(<common-data>-<insert-flora-tint>)": ["chard literal", "string literal", "bloom literal" "#"],
    "FIRST(<common-data>-<typecast>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<all-type-value>-<common-data>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<all-type-value>-<open-bracket>)": ["[", "{"],
    "FIRST(<all-type-value>-<supply-dirt>)": ["getItems", "getKeys", "getValues"],
    "FIRST(<all-type-value>-<inpetal>)": "inpetal",
    "FIRST(<start-end-step>)": "[",
    "FOLLOW(<start-end-step>)": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "FIRST(<insert-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<insert-start>-<:>)": ":",
    "FIRST(<close-start>-<close-end>)": ["]", ":"],
    "FIRST(<close-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<close-end>-<]>)": "]",
    "FIRST(<close-end>-<:>)": ":",
    "FIRST(<skip-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<skip-start>-<:>)": ":",
    "FIRST(<2D-start-end-step>)": "[",
    "FOLLOW(<2D-start-end-step>)": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "FIRST(<2D-insert-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<2D-insert-start>-<:>)": ":",
    "FIRST(<2D-close-start>-<2D-close-end>)": ["]", ":"],
    "FIRST(<2D-insert-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<2D-close-end>-<]>)": "]",
    "FIRST(<2D-close-end>-<:>)": ":",
    "FIRST(<2D-skip-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<2D-skip-start>-<:>)": ":",
    "FIRST(<3D-start-end-step>)": "[",
    "FOLLOW(<3D-start-end-step>)": ["[", "$", "+", ",", "=", "!", "at", "nut", ">", "<", ")", ":", "leaf", ";", "(", "]", "}"],
    "FIRST(<3D-insert-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<3D-insert-start>-<[>)": "[",
    "FIRST(<3D-close-start>-<3D-close-end>)": ["]", ":"],
    "FIRST(<3D-close-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<3D-close-end>-<]>)": "]",
    "FIRST(<3D-close-end>-<:>)": ":",
    "FIRST(<3D-skip-start>-<insert-index>)": ["tint literal", "string literal"],
    "FIRST(<3D-skip-start>-<:>)": ":",
    "FIRST(<sequence>-<common-data>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<sequence>-<open-bracket>)": ["[", "{"],
    "FIRST(<next-sqnc>)": ",",
    "FOLLOW(<next-sqnc>)": ["]", "}"],
    "FIRST(<2D-sequence>-<common-data>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<2D-sequence>-<open-bracket>)": ["[", "{"],
    "FIRST(<next-2D-sqnc>)": ",",
    "FOLLOW(<next-2D-sqnc>)": ["]", "}"],
    "FIRST(<next-3D-sqnc>)": ",",
    "FOLLOW(<next-3D-sqnc>)": ["]", "}"],
    "FIRST(<open-bracket>-<[>)": "[",
    "FIRST(<open-bracket>-<{>)": "{",
    "FIRST(<dirt>)": "string literal",
    "FOLLOW(<dirt>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "]", "}"],
    "FIRST(<close-bracket>-<]>)": "]",
    "FIRST(<close-bracket>-<}>)": "}",
    "FIRST(<insert-func>)": "(",
    "FOLLOW(<insert-func>)": ["[", ",", "=", "+", "-", "*", "/", "%", ";", "$", "(", ")", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}", "inpetal"],
    "FIRST(<instance-grab>)": "#",
    "FOLLOW(<instance-grab>)": ["[", ",", "=", "+", "-", "*", "/", "%", ";", "$", "(", ")", "!", "at", "nut", ">", "<", ":", "leaf", "]", "}", "inpetal"],
    "FIRST(<i/o>-<mint>)": "mint",
    "FIRST(<i/o>-<insert-inpetal>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#"],
    "FIRST(<insert-inpetal>-<all-types>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<insert-inpetal>-<identifier>)": "#",
    "FIRST(<more-id>)": ["[", "$"],
    "FOLLOW(<more-id>)": ["=", "+", "-", "*", "/", "%", ";"],
    "FIRST(<more-all>)": ",",
    "FOLLOW(<more-all>)": ["=", "!", "at", "nut", ">", "<", ")", ";", "(", "$", ","],
    "FIRST(<insert-assignment>)": ["=", "+", "-", "*", "/", "%"],
    "FOLLOW(<insert-assignment>)": ";",
    "FIRST(<insert-condition>-<all-cond-operator>)": ["=", "!", "at", "nut", ">", "<"],
    "FIRST(<insert-condition>-<string-cond-op>)": ["=", "!", "at", "nut"],
    "FOLLOW(<insert-condition>)": [")", ";", "("],
    "FIRST(<insert-all-operand>-<flora-tint-value>)": ["tint literal", "flora literal", "#", "lent", "$"],
    "FIRST(<insert-all-operand>-<common-type>)": ["tint", "flora", "chard", "string", "bloom"],
    "FIRST(<more-type>)": ",",
    "FOLLOW(<more-type>)": [")", ";", "("],
    "FIRST(<string-operand>-<all-type-value>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "FIRST(<string-operand>-<all-types>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<more-all-types>)": ",",
    "FOLLOW(<more-all-types>)": [")", ";", "("],
    "FIRST(<all-cond-operator>-<string-cond-op>)": ["=", "!", "at", "nut"],
    "FIRST(<all-cond-operator>-<>>)": ">",
    "FIRST(<all-cond-operator>-<<>)": "<",
    "FIRST(<all-cond-operator>-<>=>)": ">",
    "FIRST(<all-cond-operator>-<<=>)": "<",
    "FIRST(<string-cond-op>-<==>)": "=",
    "FIRST(<string-cond-op>-<!=>)": "!",
    "FIRST(<string-cond-op>-<=&>)": "=",
    "FIRST(<string-cond-op>-<=/>)": "=",
    "FIRST(<string-cond-op>-<at>)": "at",
    "FIRST(<string-cond-op>-<nut>)": "nut",
    "FIRST(<more-condition>)": "eleaf",
    "FOLLOW(<more-condition>)": ["moss", "hard", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint", "leaf", "fern", "willow", "tree", "clear", "break", ")", "regrow"],
    "FIRST(<more-condition>)": "moss",
    "FOLLOW(<more-condition>)": ["hard", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "#", "inpetal", "mint", "leaf", "fern", "willow", "tree", "clear", "break", ")", "regrow"],
    "FIRST(<iterative>-<fern>)": "fern",
    "FIRST(<iterative>-<willow>)": "willow",
    "FIRST(<insert-fern>-<identifier>)": "#",
    "FIRST(<insert-fern>-<common-data>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<more-common>)": ",",
    "FOLLOW(<more-common>)": "at",
    "FIRST(<insert-branch>-<:>)": ":",
    "FIRST(<insert-branch>-<fern>)": "fern",
    "FIRST(<more-branch>)": "branch",
    "FOLLOW(<more-branch>)": ")",
    "FIRST(<argument>-<insert-argument>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "FIRST(<argument>-<common-type>)": ["tint", "flora", "chard", "string", "bloom"],
    "FIRST(<more-data>)": ",",
    "FOLLOW(<more-data>)": ")",
    "FIRST(<insert-argument>-<all-type-value>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "FIRST(<insert-argument>-<identifier>)": "#",
    "FIRST(<next-argument>)": ",",
    "FOLLOW(<next-argument>)": ")",
    "FIRST(<2D-argument>-<all-type-value>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "FIRST(<2D-argument>-<identifier>)": "#",
    "FIRST(<add-2D-argument>)": ",",
    "FOLLOW(<add-2D-argument>)": ")",
    "FIRST(<add-3D-argument>)": ",",
    "FOLLOW(<add-3D-argument>)": ")",
    "FIRST(<function>-<common-type>)": ["tint", "flora", "chard", "string", "bloom"],
    "FIRST(<function>-<viola>)": "viola",
    "FOLLOW(<function>)": "plant",
    "FIRST(<insert-regrow>-<all-type-value>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem", "[", "{", "getItems", "getKeys", "getValues", "inpetal"],
    "FIRST(<insert-regrow>-<common-data>)": ["tint literal", "flora literal", "#", "lent", "chard literal", "string literal", "bloom literal", "tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<insert-parameter>-<keyword-param>)": ["tint", "flora", "chard", "string", "bloom", "*", "$"],
    "FIRST(<insert-parameter>-<all-types>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<insert-parameter>-<identifier>)": "#",
    "FIRST(<keyword-param>-<common-type>)": ["tint", "flora", "chard", "string", "bloom"],
    "FIRST(<keyword-param>-<kwarg>)": "*",
    "FOLLOW(<keyword-param>)": [")", ","],
    "FIRST(<more-key-param>)": ",",
    "FOLLOW(<more-key-param>)": ")",
    "FIRST(<next-parameter>)": ",",
    "FOLLOW(<next-parameter>)": ")",
    "FIRST(<2D-parameter>-<keyword-param>)": ["tint", "flora", "chard", "string", "bloom", "*", "$"],
    "FIRST(<2D-parameter>-<all-types>)": ["tint", "flora", "chard", "string", "bloom", "florist", "tulip", "dirt", "stem"],
    "FIRST(<2D-parameter>-<identifier>)": "#",
    "FIRST(<next-2D-param>)": ",",
    "FOLLOW(<next-2D-param>)": ")",
    "FIRST(<next-3D-param>)": ",",
    "FOLLOW(<next-3D-param>)": ")"
}
